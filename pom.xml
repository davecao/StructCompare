<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- POM relationships -->
  <groupId>org.bilab.tools</groupId>
  <artifactId>bilab-structure</artifactId>
  <version>1.0</version>
  <properties>
    <!-- 
    I. type: 
      org.apache.maven.plugins: maven-compiler-plugin   
        1.jar: create java jar, using javac. Default.
         
      org.codehaus.mojo: native-maven-plugin         
        2.uexe: create unix executable file (No JVM needed), using gcj 
        3.dll:  
        4.exe: 
        5.lib:
        6.a: static library
        7.o: 
        8.so:
        9.sl:
        10.dylib:
        11.jnilib:
    II. usage: 
        mvn -Dmaven.packaging.type=[above value] clean package
    -->
    <maven.packaging.type>jar</maven.packaging.type>
    
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.proj.mainClass>org.bilab.tools.StructComp</maven.proj.mainClass>
    <maven.compiler.source>1.5</maven.compiler.source>
    <maven.compiler.target>1.5</maven.compiler.target>

    <maven.gcj.execute>gcj</maven.gcj.execute>
    <maven.gcj.linker>gcj</maven.gcj.linker>
    <maven.gcj.compile.optimize>-O2 -fcni</maven.gcj.compile.optimize>
    <!-- 3.0.4 -->
    <biojava.version>3.0.4</biojava.version>
    <biojava.core.version>3.0.4</biojava.core.version>
    <biojava.protmod.version>3.0.2</biojava.protmod.version>
  </properties>
  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <!-- sun jars -->
    <!-- gcj could not find javax.xml.bind.* in rt.jar -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.2.6</version>
    </dependency>
    
    <!-- jmol 
    <dependency>
      <groupId>org.jmol</groupId>
      <artifactId>jmol</artifactId>
    </dependency>
    -->
    <!-- Apache commons CLI -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- Apache commons lang -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.1</version>
    </dependency>
    <!-- Jmol locally compiled -->
    <!--
    <dependency>
      <groupId>org.jmol</groupId>
      <artifactId>jmol</artifactId>
      <version>13.0.14</version>
      <version>12.0.22</version>
    </dependency>
    -->
<!--
      <scope>system</scope>
      <systemPath>${basedir}/libs/Jmol.jar</systemPath>
-->
    <dependency>
      <groupId>net.sourceforge.jmol</groupId>
      <artifactId>jmol</artifactId>
      <version>13.0.14</version>
    </dependency>
<!--  
   <dependency>
      <groupId>org.openscience</groupId>
      <artifactId>jmol</artifactId>
      <version>12.0.22</version>
      <scope>system</scope>
      <systemPath>${basedir}/libs/Jmol.jar</systemPath>
    </dependency>
-->
    <!-- Biojava version 3.0.4-->
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-core</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-alignment</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-genome</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-structure</artifactId>
      <version>${biojava.version}</version> 
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-structure-gui</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-phylo</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-protmod</artifactId>
      <version>${biojava.protmod.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-ws</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-aa-prop</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-protein-disorder</artifactId>
      <version>${biojava.version}</version>
    </dependency>
  </dependencies>

  <!-- Project infomation -->
  <name>bilab-structure</name>
  <description> Structure aligment by biojava </description> 
  <url>http://maven.apache.org</url>
  <inceptionYear>2012.1.4</inceptionYear>
  <licenses>
    <license>
      <name>Apache 2 </name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>davecao</id>
      <name>Wei Cao</name>
      <email>davecao@bi.a.u-tokyo.ac.jp</email>
      <url>http://www.bi.a.u-tokyo.ac.jp</url>
      <organization>Bioinformation Engineering Laboratory</organization>
      <organizationUrl>http://www.bi.a.u-tokyo.ac.jp</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+9</timezone>
    </developer>
  </developers>
  <contributors></contributors>
  <organization>
    <name>Bioinformation Engineering Laboratory </name>
    <url>http://www.bi.a.u-tokyo.ac.jp</url>
  </organization>

  <!-- Build settings -->
  <packaging>${maven.packaging.type}</packaging>

  <build>
    <directory>${project.basedir}/target</directory>
    <outputDirectory>${project.build.directory}/classes</outputDirectory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
    <resources>  
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>
   
    <plugins>
      <!-- Maven compiler plugin -->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
      </plugin>
      <!-- Maven native compiler plugin: set packaging under project-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
         <artifactId>native-maven-plugin</artifactId>
         <version>1.0-alpha-7</version>
         <extensions>true</extensions>
         <configuration>
          <compilerExecutable>${maven.gcj.execute}</compilerExecutable>
          <compilerOutputDirectory>${project.build.directory}/objs</compilerOutputDirectory>
          <sources>
            <source>
              <directory>${project.basedir}/src/main/java</directory>
              <includes>
                <include>**/*.java</include>
              </includes>
            </source>
          </sources>
          <compilerStartOptions>
            <compilerStartOption>${maven.gcj.compile.optimize}</compilerStartOption>
            <compilerStartOption>-B ${project.build.directory}/dependency</compilerStartOption>
          </compilerStartOptions>
          
          <linkerExecutable>${maven.gcj.linker}</linkerExecutable>
          <linkerStartOptions>
            <linkerStartOption>--main=${maven.proj.mainClass}</linkerStartOption>
          </linkerStartOptions>
         </configuration>
      </plugin>
      <!-- 
          Maven jar plugin:
              The final location of the created jar file is
              ${project.basedir}/jar
          on command line: -DoutputDirectory=<path>   
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <outputDirectory>${project.basedir}/jars</outputDirectory>
          <archive>
            <index>true</index>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${maven.proj.mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      
      <!-- Maven dependency plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib/</outputDirectory>
              <overWriteRelease>false</overWriteRelease>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- maven assembly plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <outputDirectory>${project.basedir}/jars</outputDirectory>
          <archive>
            <manifest>
              <mainClass>org.bilab.tools.StructComp</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting></reporting>

  <!-- Build Environment -->
  <!-- Build Information -->
  <issueManagement></issueManagement>
  <ciManagement></ciManagement>
  <mailingLists></mailingLists>
  <scm></scm>
  
  <!-- Maven enviroment -->
  <prerequisites></prerequisites>
  <repositories>
    <repository>
      <id>biojava-legacy-repo</id>
      <name>BioJava's Git based legacy maven repo</name>
      <url>https://github.com/biojava/maven-repo/raw/master/</url>
    </repository>
    <repository>
      <id>biojava-maven-repo</id>
      <name>BioJava repository</name>
      <url>http://www.biojava.org/download/maven/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
       <id>repo1.maven.org</id>
       <name>repo1 of maven2 org </name>
       <url>http://repo1.maven.org/maven2</url>
    </repository>
    <!-- Sun Java j2ee -->
    <repository>
       <id>maven2-repository.dev.java.net</id>
       <name>Java.net Repository for Maven</name>
       <url>http://download.java.net/maven/2</url>
       <layout>default</layout>
    </repository>
    <repository>
       <id>mirrors.ibiblio.org</id>
       <name>maven2 Repository on ibiblio</name>
       <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
    </repository>
    <repository>
       <id>el4.elca-services.ch</id>
       <name>maven2 Repository on elca</name>
       <url>http://el4.elca-services.ch/el4j/maven2snapshots</url>
    </repository>

    <repository>
       <id>maven.atlassian.com</id>
       <name>maven2 Repository on atkassian</name>
       <url>https://maven.atlassian.com/repository/public</url>
    </repository>

  </repositories>
  <pluginRepositories></pluginRepositories>
  <distributionManagement></distributionManagement>
  <profiles></profiles>
</project>
